
" have some additional work to make it proper
finish

if !has("conceal") || &enc != 'utf-8'
    finish
endif

" math
" ‚§´
syn match pyOperator "\v \zs/\ze "              conceal cchar=√∑
syn match pyOperator "\*"                 conceal cchar=√ó
syn match pyOperator "\*\*"               conceal cchar=^
syn match pyOperator "\v<(math\.)?sqrt>"  conceal cchar=‚àö
syn match pyOperator "\v<(math\.)?pi>"    conceal cchar=œÄ
syn match pyOperator "\v ?\*\* ?1>"       conceal cchar=¬π
syn match pyOperator "\v ?\*\* ?2>"       conceal cchar=¬≤
syn match pyOperator "\v ?\*\* ?3>"       conceal cchar=¬≥
syn match pyOperator "\v ?\*\* ?4>"       conceal cchar=‚Å¥
syn match pyOperator "\v ?\*\* ?5>"       conceal cchar=‚Åµ
syn match pyOperator "\v ?\*\* ?6>"       conceal cchar=‚Å∂
syn match pyOperator "\v ?\*\* ?7>"       conceal cchar=‚Å∑
syn match pyOperator "\v ?\*\* ?8>"       conceal cchar=‚Å∏
syn match pyOperator "\v ?\*\* ?9>"       conceal cchar=‚Åπ



syn match pyOperator "=" conceal cchar=‚üµ
syn match pyOperator "==" conceal cchar==


" keywords
" syn match pyKeyword "^"   conceal cchar=‚äª
syn keyword pyKeyword and conceal cchar=‚àß
syn keyword pyKeyword or  conceal cchar=‚à®
syn keyword pyKeyword not conceal cchar=¬¨



" Types and magics
syn keyword pyType None    conceal cchar=‚ç¨
syn keyword pyType True    conceal cchar=T
syn keyword pyType False   conceal cchar=F
syn keyword pyType int     conceal cchar=‚Ñ§
syn keyword pyType float   conceal cchar=‚Ñù
syn keyword pyType str     conceal cchar=ùïä
syn keyword pyType list    conceal cchar=ùïÉ
syn keyword pyType tuple   conceal cchar=ùïã
syn keyword pyType complex conceal cchar=‚ÑÇ

syn keyword pyStatement map       conceal cchar=¬®
syn keyword pyOperator  sum       conceal cchar=‚àë
syn keyword pyOperator  len       conceal cchar=‚â¢
syn keyword pyOperator  min       conceal cchar=‚é£
syn keyword pyOperator  max       conceal cchar=‚é°
syn keyword pyType      range     conceal cchar=Œπ
syn keyword pyType      reversed  conceal cchar=œï
syn keyword pyType      enumerate conceal cchar=‚ò∑

" syn keyword pyStatement del conceal cchar=
" ‚ü∏
syn keyword pyStatement lambda      conceal cchar=Œª
syn keyword pyStatement def         conceal cchar=‚ñ°
syn keyword pyStatement return      conceal cchar=‚¨Ö
syn keyword pyStatement yield       conceal cchar=‚•¢
syn keyword pyStatement class       conceal cchar=‚¨°
syn match   pyOperator  "\<self\>"  conceal cchar=·êÅ
syn match   pyOperator  "\<other\>" conceal cchar=üúÉ

syn keyword pyStatement assert conceal cchar=‚Äº
syn keyword pyStatement import conceal cchar=‚§ä

syn keyword pyStatement while          conceal cchar=‚•Ä
syn keyword pyStatement for            conceal cchar=‚àÄ
syn keyword pyStatement continue       conceal cchar=‚§¥
syn keyword pyStatement break          conceal cchar=‚§ß
syn keyword pyStatement in             conceal cchar=‚àà
syn match   pyStatement "\<not \+in\>" conceal cchar=‚àâ
syn match   pyStatement "\<is\>"       conceal cchar=‚ü∑


syn keyword pyStatement if   conceal cchar=?
syn keyword pyStatement elif conceal cchar=‚å™
syn keyword pyStatement else conceal cchar=‚ñ∑

hi link pyOperator  Operator
hi link pyStatement Statement
hi link pyKeyword   Keyword
hi link pyType      StorageClass
hi link pyBool      Boolean

" setlocal conceallevel=1
